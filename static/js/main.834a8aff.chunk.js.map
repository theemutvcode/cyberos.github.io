{"version":3,"sources":["ThemeMode.js","images/cyber-logo.svg","Heading.js","Translations.js","Footer.js","images/preview_light.png","images/preview_dark.png","Website.js","index.js"],"names":["isDarkMode","window","matchMedia","matches","Heading","className","src","CyberLogo","React","Component","translations","en_US","website","pl","getLanguageKey","key","language","navigator","Footer","wipDisclaimerHTML","replace","dangerouslySetInnerHTML","__html","Website","previewImage","PreviewImageDark","PreviewImageLight","href","ReactDOM","render","StrictMode","document","querySelector","body","classList","add"],"mappings":"m2BAIO,SAASA,IACd,OAAOC,OAAOC,WAAW,gCAAgCC,Q,gCCL5C,G,MAAA,IAA0B,wC,OCIpBC,E,4JACnB,WACE,OACE,qBAAKC,UAAU,iBAAf,SACE,qBAAIA,UAAU,sBAAd,UACE,qBAAKA,UAAU,oBAAoBC,IAAKC,IAD1C,mB,GAJ6BC,IAAMC,W,cCDvCC,EAAe,CACjBC,MAAOA,EAAMC,QACbC,GAAIA,EAAGD,SAOM,SAASE,EAAeC,GACrC,IAAIC,EAJGC,UAAUD,YAAYN,EAAeO,UAAUD,SAAW,QAMjE,OAAON,EAAaM,GAAUD,G,UCVXG,E,4JACnB,WACE,IAAIC,EAAoBL,EAAe,iBACpCM,QAAQ,IAAK,2DACbA,QAAQ,IAAK,QAChB,OACE,qBAAKf,UAAU,mBAAf,SACE,sBAAKA,UAAU,iBAAf,UACE,4BAAIS,EAAe,qBACnB,mBAAGO,wBAAyB,CAAEC,OAAQH,c,GATZX,IAAMC,WCL3B,MAA0B,0CCA1B,MAA0B,yCCQpBc,E,4JACnB,WACE,IAAIC,EAAexB,IAAeyB,EAAmBC,EACrD,OACE,sBAAKrB,UAAU,eAAf,UACE,cAAC,EAAD,IACA,qBAAKA,UAAU,kBAAf,SACE,mCACE,6BAAKS,EAAe,gBACpB,sBAAKT,UAAU,mBAAf,UACE,mBAAGA,UAAU,SAASsB,KAAK,sCAA3B,SACGb,EAAe,cAElB,mBAAGT,UAAU,SAASsB,KAAK,6BAA3B,uBAIF,qBAAKtB,UAAU,0BAAf,SACE,mBAAGsB,KAAMH,EAAT,SACE,qBAAKnB,UAAU,gBAAgBC,IAAKkB,aAK5C,cAAC,EAAD,W,GAxB6BhB,IAAMC,WCF3CmB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,cAAc,UAGzBD,SAASE,KAAKC,UAAUC,IAAxB,URZSnC,IAAe,OAAS,QQYjC,Y","file":"static/js/main.834a8aff.chunk.js","sourcesContent":["export function getThemeMode() {\n  return isDarkMode() ? \"dark\" : \"light\";\n}\n\nexport function isDarkMode() {\n  return window.matchMedia(\"(prefers-color-scheme: dark)\").matches;\n}\n","export default __webpack_public_path__ + \"static/media/cyber-logo.ad899d8c.svg\";","import React from \"react\";\nimport \"./heading.css\";\nimport CyberLogo from \"./images/cyber-logo.svg\";\n\nexport default class Heading extends React.Component {\n  render() {\n    return (\n      <div className=\"website-header\">\n        <h1 className=\"website-header-text\">\n          <img className=\"header-cyber-logo\" src={CyberLogo} />\n          CyberOS\n        </h1>\n      </div>\n    );\n  }\n}\n","import en_US from \"./translations/en_US.json\";\nimport pl from \"./translations/pl.json\";\n\nlet translations = {\n  en_US: en_US.website,\n  pl: pl.website,\n};\n\nfunction getLanguage() {\n  return navigator.language in translations ? navigator.language : \"en_US\";\n}\n\nexport default function getLanguageKey(key) {\n  let language = getLanguage();\n\n  return translations[language][key];\n}\n","import React from \"react\";\nimport getLanguageKey from \"./Translations\";\nimport { isDarkMode } from \"./ThemeMode\";\nimport \"./footer.css\";\n\nexport default class Footer extends React.Component {\n  render() {\n    let wipDisclaimerHTML = getLanguageKey(\"wipDisclaimer\")\n      .replace(\"[\", '<a href=\"https://github.com/cyberos/cyberos.github.io\">')\n      .replace(\"]\", \"</a>\");\n    return (\n      <div className=\"footer-container\">\n        <div className=\"footer-content\">\n          <p>{getLanguageKey(\"footerCopyright\")}</p>\n          <p dangerouslySetInnerHTML={{ __html: wipDisclaimerHTML }}></p>\n        </div>\n      </div>\n    );\n  }\n}\n","export default __webpack_public_path__ + \"static/media/preview_light.999b5c52.png\";","export default __webpack_public_path__ + \"static/media/preview_dark.9244a69a.png\";","import React from \"react\";\nimport Heading from \"./Heading\";\nimport Footer from \"./Footer\";\nimport getLanguageKey from \"./Translations\";\nimport { isDarkMode } from \"./ThemeMode\";\nimport PreviewImageLight from \"./images/preview_light.png\";\nimport PreviewImageDark from \"./images/preview_dark.png\";\n\nexport default class Website extends React.Component {\n  render() {\n    let previewImage = isDarkMode() ? PreviewImageDark : PreviewImageLight;\n    return (\n      <div className=\"website-root\">\n        <Heading />\n        <div className=\"website-content\">\n          <center>\n            <h1>{getLanguageKey(\"introQuote\")}</h1>\n            <div className=\"button-container\">\n              <a className=\"button\" href=\"https://dir.omame.tech/cyberos-iso/\">\n                {getLanguageKey(\"download\")}\n              </a>\n              <a className=\"button\" href=\"https://github.com/cyberos\">\n                GitHub\n              </a>\n            </div>\n            <div className=\"preview-image-container\">\n              <a href={previewImage}>\n                <img className=\"preview-image\" src={previewImage}></img>\n              </a>\n            </div>\n          </center>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { getThemeMode } from \"./ThemeMode\";\nimport Website from \"./Website\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Website />\n  </React.StrictMode>,\n  document.querySelector(\"#root\")\n);\n\ndocument.body.classList.add(`${getThemeMode()}-mode`);\n"],"sourceRoot":""}